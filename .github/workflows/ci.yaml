name: CI/CD Pipeline

on:
  pull_request:
    paths:
      - go.mod
      - '**.go'
      - .github/workflows/ci.yml
      - 'website/**'
      - 'build/**' 

jobs:
  environment-setup:
    name: Environment Setup and Dependency Installation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - run: make environment

      - name: Cache Go Modules
        id: go-mod-cache
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/go/pkg/mod
          key: go-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-mod-${{ runner.os }}-

      - run: make go-mod-sync

      - name: Set up Trivy Cache
        id: trivy-cache
        uses: actions/cache@v4
        with:
          path: trivy/.cache
          key: trivy-db-${{ runner.os }}

      # Initialize Trivy Database only if cache is missing
      - name: Initialize Trivy Database (if needed)
        if: steps.trivy-cache.outputs.cache-hit != 'true'
        run: |
          make trivy-scan TRIVY_ARGS="fs --download-db-only --cache-dir trivy/.cache"

  code-quality:
    name: Code Quality Checks and Static Code Analysis
    runs-on: ubuntu-latest
    needs: environment-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # - name: Code Quality Checks and Static Code Analysis
      #   run: make go-lint

  unit-tests:
    name: Unit Testing
    runs-on: ubuntu-latest
    needs: environment-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # - name: Unit Testing
      #   env:
      #     GOCACHE: ${{ runner.temp }}/go-build-cache      
        # run: make go-test

  security-scanning:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: environment-setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Trivy Cache
        id: trivy-cache
        uses: actions/cache@v4
        with:
          path: trivy/.cache
          key: trivy-db-${{ runner.os }}

      - name: Security Scanning with Trivy
        run: make trivy-scan TRIVY_ARGS="fs --cache-dir trivy/.cache ."

  package:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests, security-scanning]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Cache Go Modules
        id: go-mod-cache
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/go/pkg/mod
          key: go-mod-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-mod-${{ runner.os }}-

      - name: Authenticate to GCP
        id: auth
        uses: 'google-github-actions/auth@v2.1.6'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.PROVIDER_NAME }}
          service_account: ${{ secrets.SA_EMAIL }}

      - name: Build and Push API with Kaniko
        run: make kaniko-docker-image DOCKER_IMAGE_REPO="europe-west3-docker.pkg.dev/micro-infra/micro-repo"  DOCKER_IMAGE=api

      - name: Build and Push Frontend with Kaniko
        run: make kaniko-docker-image DOCKER_IMAGE_REPO="europe-west3-docker.pkg.dev/micro-infra/micro-repo"  DOCKER_IMAGE=frontend
